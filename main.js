(()=>{"use strict";var t={inputSelector:".popup__input",submitButtonSelector:".popup__submit",submitButtonInactive:"popup__submit_disable",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_active"},e={avatarButtun:document.querySelector(".profile__avatar-edit"),avatarImg:document.querySelector(".profile__avatar"),popupAvatar:document.querySelector(".popup_upd-avatar"),avatarForm:document.querySelector(".popup__form_action_upd")},r={editButton:document.querySelector(".profile__edit-button"),popupEditProfile:document.querySelector(".popup_edit-profile"),formEdit:document.querySelector(".popup__form_action_edit"),profileName:document.querySelector(".profile__name"),profileNameInput:document.querySelector(".popup__input_name_name"),profileCaption:document.querySelector(".profile__caption"),profileCaptionInput:document.querySelector(".popup__input_name_caption")},n={addButton:document.querySelector(".profile__add-button"),cardTemplateSelector:".template-card",popupAddCard:document.querySelector(".popup_add-card"),formAdd:document.querySelector(".popup__form_action_add"),photoContainer:document.querySelector(".cards__list"),cardTitleInput:document.querySelector(".popup__input_name_place"),cardSourceInput:document.querySelector(".popup__input_name_source")},o={confirmSelector:document.querySelector(".popup_confirm"),deleteForm:document.querySelector(".popup__form_action_conf")},i={cardTitle:".card__title",cardPhoto:".card__photo",trashButton:".card__delete",like:".card__like",likeActive:"card__like_active",likeCounter:".card__like-counter"},u=document.querySelector(".popup_photo"),a={alert:document.querySelector(".alert"),alertVisible:"alert_visible",alertError:document.querySelector(".alert__error")};function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=r,this._inputList=Array.from(this._form.querySelectorAll(e.inputSelector)),this._submitButton=this._form.querySelector(e.submitButtonSelector),this._submitButtonInactive=e.submitButtonInactive,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,r;return e=t,(r=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._submitButton.disabled=this._hasInvalidInput()}},{key:"_hideInputError",value:function(t){var e=this._form.querySelector("#".concat(t.id,"-error"));e.classList.remove(this._errorClass),t.classList.remove(this._inputErrorClass),e.textContent=""}},{key:"_showInputError",value:function(t){var e=this._form.querySelector("#".concat(t.id,"-error"));e.textContent=t.validationMessage,e.classList.add(this._errorClass),t.classList.add(this._inputErrorClass)}},{key:"_checkInput",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_setInputListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInput(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setInputListeners()}},{key:"clearValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var d=function(){function t(e,r,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._likes=e.likes,this._id=e._id,this._caption=e.name,this._link=e.link,this._ownerId=e.owner._id,this._userId=i,this._cardSelector=o,this._card=this._cloneTemplate(),this._cardLikeButtonActive=n.likeActive,this._cardImage=this._card.querySelector(n.cardPhoto),this._cardLikeButton=this._card.querySelector(n.like),this._cardTitle=this._card.querySelector(n.cardTitle),this._cardTrashButton=this._card.querySelector(n.trashButton),this._likesCounter=this._card.querySelector(n.likeCounter),this._handleCardClick=r.handleCardClick,this._addLikeCard=r.addCardLike,this._removeLikeCard=r.removeCardLike,this._openDeleteCardPopup=r.openDeleteCardPopup,this._handleLikeCard=this._handleLikeCard.bind(this),this._handleDeleteCard=this._handleDeleteCard.bind(this)}var e,r;return e=t,(r=[{key:"_cloneTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_handleLikeCard",value:function(){this._isLiked()?this._removeLikeCard(this,this._id):this._addLikeCard(this,this._id)}},{key:"deleteCard",value:function(){this._card.remove()}},{key:"_handleDeleteCard",value:function(){this._openDeleteCardPopup(this)}},{key:"_setEventListeners",value:function(){var t=this;this._cardImage.addEventListener("click",(function(){return t._handleCardClick(t._caption,t._link)})),this._cardLikeButton.addEventListener("click",this._handleLikeCard),this._cardTrashButton.addEventListener("click",this._handleDeleteCard)}},{key:"_isLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"_isOwner",value:function(){return this._userId!==this._ownerId}},{key:"_updateLikes",value:function(){this._likesCounter.textContent=this._likes.length,this._isLiked()?this._cardLikeButton.classList.add(this._cardLikeButtonActive):this._cardLikeButton.classList.remove(this._cardLikeButtonActive)}},{key:"_deleteTrashButton",value:function(){this._cardTrashButton.remove()}},{key:"_setCardData",value:function(){this._isOwner()&&this._deleteTrashButton(),this._updateLikes(),this._card.id=this._id,this._cardImage.src=this._link,this._cardImage.alt=this._caption,this._cardTitle.textContent=this._caption}},{key:"setLikesInfo",value:function(t){this._likes=t,this._updateLikes()}},{key:"generateCard",value:function(){return this._setCardData(),this._setEventListeners(),this._card}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==y(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===y(o)?o:String(o)),n)}var o}var v=function(){function t(e,r){var n=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=n,this._container=r}var e,r;return e=t,(r=[{key:"renderItems",value:function(t){var e=this;t.reverse().forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function m(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}var b=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._handleEscClose=this._handleEscClose.bind(this),this._closePopupByClick=this._closePopupByClick.bind(this)}var e,r;return e=t,(r=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_closePopupByClick",value:function(t){t.target.classList.contains("popup_opened")&&this.close(),t.target.classList.contains("popup__close-button")&&this.close()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._closePopupByClick)}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}])&&m(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===k(o)?o:String(o)),n)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=C(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},g.apply(this,arguments)}function w(t,e){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},w(t,e)}function C(t){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},C(t)}var E=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&w(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=C(n);if(o){var r=C(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===k(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImg=e._popup.querySelector(".popup__img"),e._popupImgCaption=e._popup.querySelector(".popup__img-caption"),e}return e=u,(r=[{key:"open",value:function(t,e){this._popupImg.src=e,this._popupImg.alt=t,this._popupImgCaption.textContent=t,g(C(u.prototype),"open",this).call(this)}}])&&S(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function P(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},L.apply(this,arguments)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var T=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(n);if(o){var r=I(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._submitForm=e,r._form=r._popup.querySelector(".popup__form"),r}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._form.querySelectorAll(".popup__input"),this._inpValues={},this._inputList.forEach((function(e){t._inpValues[e.name]=e.value})),this._inpValues}},{key:"setEventListeners",value:function(){var t=this;L(I(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitForm(t._getInputValues())}))}},{key:"close",value:function(){L(I(u.prototype),"close",this).call(this),this._form.reset()}}])&&P(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function q(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==B(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=R(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},A.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}var D=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=R(n);if(o){var r=R(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===B(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._submitForm=e,r._form=r._popup.querySelector(".popup__form"),r.submitButton=r._form.querySelector(".popup__submit"),r}return e=u,(r=[{key:"setSubmitButtontext",value:function(t){this.submitButton.textContent=t}},{key:"setEventListeners",value:function(){var t=this;A(R(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitForm(t._card)}))}},{key:"open",value:function(t){A(R(u.prototype),"open",this).call(this),this._card=t}}])&&q(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function U(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===V(o)?o:String(o)),n)}var o}var N=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._avatar=e,this._name=r,this._caption=n,this._userId=null}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,caption:this._caption.textContent}}},{key:"setUserInfo",value:function(t,e,r){this._name.textContent=t,this._caption.textContent=e,this._userId=r}},{key:"setUserAvatar",value:function(t){this._avatar.src=t}},{key:"userId",value:function(){return this._userId}}])&&U(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function J(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===F(o)?o:String(o)),n)}var o}var G=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var e,r;return e=t,(r=[{key:"_checkOk",value:function(t){return t.ok?t.json():Promise.reject(t.status)}},{key:"getCards",value:function(){var t=this;return fetch(this._url+"cards",{method:"GET",headers:this._headers}).then((function(e){return t._checkOk(e)}))}},{key:"postCards",value:function(t,e){var r=this;return fetch(this._url+"cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})}).then((function(t){return r._checkOk(t)}))}},{key:"getUserInfo",value:function(){var t=this;return fetch(this._url+"users/me",{method:"GET",headers:this._headers}).then((function(e){return t._checkOk(e)}))}},{key:"setUserInfo",value:function(t,e){var r=this;return fetch(this._url+"users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then((function(t){return r._checkOk(t)}))}},{key:"updAvatar",value:function(t){var e=this;return fetch(this._url+"users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((function(t){return e._checkOk(t)}))}},{key:"deleteCard",value:function(t){var e=this;return fetch(this._url+"cards/".concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkOk(t)}))}},{key:"addCardLike",value:function(t){var e=this;return fetch(this._url+"cards/likes/".concat(t),{method:"PUT",headers:this._headers}).then((function(t){return e._checkOk(t)}))}},{key:"removeCardLike",value:function(t){var e=this;return fetch(this._url+"cards/likes/".concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkOk(t)}))}}])&&J(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function H(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var M=new N(e.avatarImg,r.profileName,r.profileCaption),z=new G({url:"https://mesto.nomoreparties.co/v1/cohort-61/",headers:{authorization:"dd0285f4-2ea6-4188-b21f-695fee7d6f60","Content-Type":"application/json"}});Promise.all([z.getUserInfo(),z.getCards()]).then((function(t){var e,r,n=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,a=[],c=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return H(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?H(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];return M.setUserInfo(o.name,o.about,o._id),M.setUserAvatar(o.avatar),at.renderItems(i),lt(),at})).catch((function(t){console.log("Загрузкка данных... Ошибка: ".concat(t)),ct("Загрузкка данных... Ошибка")}));var $=new T(e.popupAvatar,(function(t){var r=t.avatar,n=e.popupAvatar.querySelector(".popup__submit");n.textContent="Сохранение...",z.updAvatar(r).then((function(t){M.setUserAvatar(t.avatar),$.close(),lt()})).catch((function(t){console.log("Сохранение аватара... Ошибка: ".concat(t)),ct("Сохранение аватара... Ошибка")})).finally((function(){n.textContent="Сохранить"}))})),K=new T(r.popupEditProfile,(function(t){var e=r.popupEditProfile.querySelector(".popup__submit");e.textContent="Сохранение...",z.setUserInfo(t.name,t.caption).then((function(t){M.setUserInfo(t.name,t.about),K.close(),lt()})).catch((function(t){console.log("Сохранение данных пользователя... Ошибка: ".concat(t)),ct("Сохранение данных пользователя... Ошибка")})).finally((function(){e.textContent="Сохранить"}))})),Q=new T(n.popupAddCard,(function(t){var e=t.place,r=t.source,o=n.popupAddCard.querySelector(".popup__submit");o.textContent="Сохранение...",z.postCards(e,r).then((function(t){var e=ut(t);at.addItem(e),Q.close(),lt()})).catch((function(t){console.log("Сохранение новой карточки...... Ошибка: ".concat(t)),ct("Сохранение новой карточки... Ошибка")})).finally((function(){o.textContent="Создать"}))})),W=new D(o.confirmSelector,(function(t){W.setSubmitButtontext("Удаление..."),z.deleteCard(t._id).then((function(){t.deleteCard(),W.close(),lt()})).catch((function(t){console.log("Удаление карточки...... Ошибка: ".concat(t)),ct("Удаление карточки...... Ошибка")})).finally((function(){return W.setSubmitButtontext("Да")}))})),X=new E(u),Y=new s(t,e.avatarForm);Y.enableValidation();var Z=new s(t,r.formEdit);Z.enableValidation();var tt=new s(t,n.formAdd);tt.enableValidation();var et,rt=function(t,e){X.open(t,e)},nt=function(t){W.open(t)},ot=function(t,e){z.addCardLike(e).then((function(e){t.setLikesInfo(e.likes),lt()})).catch((function(t){console.log("Лайк карточки...... Ошибка: ".concat(t)),ct("Лайк карточки... Ошибка")}))},it=function(t,e){z.removeCardLike(e).then((function(e){t.setLikesInfo(e.likes),lt()})).catch((function(t){console.log("Удаление лайка карточки... Ошибка: ".concat(t)),ct("Удаление лайка карточки... Ошибка")}))},ut=function(t){var e=M.userId();return new d(t,{handleCardClick:rt,addCardLike:ot,removeCardLike:it,openDeleteCardPopup:nt},i,n.cardTemplateSelector,e).generateCard()},at=new v({renderer:function(t){var e=ut(t);at.addItem(e)}},n.photoContainer);$.setEventListeners(),K.setEventListeners(),Q.setEventListeners(),W.setEventListeners(),X.setEventListeners(),e.avatarButtun.addEventListener("click",(function(){Y.clearValidation(),$.open()})),r.editButton.addEventListener("click",(function(){var t=M.getUserInfo();r.profileNameInput.value=t.name,r.profileCaptionInput.value=t.caption,Z.clearValidation(),K.open()})),n.addButton.addEventListener("click",(function(){tt.clearValidation(),Q.open()}));var ct=function(t){a.alert.classList.add(a.alertVisible),et=setTimeout(lt,3e3),a.alertError.textContent=t},lt=function(){a.alert.classList.remove(a.alertVisible),clearTimeout(et),a.alertError.textContent=""}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,